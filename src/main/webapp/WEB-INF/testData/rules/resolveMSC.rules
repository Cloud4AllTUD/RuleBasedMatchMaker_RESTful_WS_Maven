	@prefix c4a: <http://rbmm.org/schemas/cloud4all/0.1/>.
	@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

	// Rule resolves MultipleSolutionConflict (MSC) by deactivating a not prioritized solutions.    
	[MSC_DeactivateSolNotPrefferd:
		(?c rdf:type c4a:MultipleSolutionConflict)
		(?c c4a:isResolvedBy "priority")
		(?c c4a:affectsConf ?conf)
		(?conf c4a:isActive "true")
		noValue(?conf c4a:hasPriority ?x)
		(?conf c4a:refersToSol ?sol)
		->
		drop(3)
		(?conf c4a:isActive "false")
		print('**** DeactivateSolNotPrefferd ***** ')
		print(?sol)
	]
	
	// Rule resolves a MulitpleSolutionConflict (MSC) based on choosing the prioritized product with the highest rating
	[ResMSCActivateHighestUserPriorSol:
		(?c rdf:type c4a:MultipleSolutionConflict)
		(?c c4a:isResolvedBy "priority")
		(?c c4a:affectsConf ?conf_1)
		(?c c4a:affectsConf ?conf_2)
		notEqual(?conf_1, ?conf_2)
		
		// if both configurations are active
		(?conf_1 c4a:isActive "true")
		(?conf_2 c4a:isActive "true")
		
		// if both configuration have a priority   
		(?conf_1 c4a:hasPriority ?prio_1)
		(?conf_2 c4a:hasPriority ?prio_2)
		
		// if conf_1 is higher prioritized as conf_2
		ge(?prio_1, ?prio_2)
		->
		drop(6)
		(?conf_2 c4a:isActive "false")
		print('**** ResMSCActivateHighestUserPriorSol ****')	
	]

	// Description of the rule: Resolves the MUTIPLE SOLUTION CONFLICTS (MSC) based on defined AT Rankings (rankingOfATs.jsonld).
	[ResMSCActivateHighestRankedSol:
		(?c rdf:type c4a:MultipleSolutionConflict)
		noValue(?c c4a:isResolvedBy "priority")
		(?c c4a:isTriggerdBy ?aff_term)
		
		// and there exists a ranking for the affected product group 
		(?sol_ranking rdf:type c4a:SolutionRanking)
		(?sol_ranking c4a:id ?aff_term)
		
		(?c c4a:affectsConf ?conf_1)
		(?c c4a:affectsConf ?conf_2)
		notEqual(?conf_1, ?conf_2)
		
		// if both configurations are active
		(?conf_1 c4a:isActive "true")
		(?conf_2 c4a:isActive "true")
		
		// If both configurations refer to a certain solution	
		(?conf_1 c4a:refersToSol ?sol_1)
		(?conf_2 c4a:refersToSol ?sol_2)
		
		(?sol_ranking ?sol_1 ?r_1)
		(?sol_ranking ?sol_2 ?r_2)
		greaterThan(?r_1, ?r_2)
		->
		drop(9)
		(?conf_2 c4a:isActive "false")
		print('**** ResMSCActivateHighestRankedSol ****')
	]

	// The rule resolves a MUTIPLE SOLUTION CONFLICT (MSC) based on defined layer (semanticSolutions.jsonld).
	[ResMSCConsiderSolLayer:
		(?c rdf:type c4a:MultipleSolutionConflict)
		noValue(?c c4a:isResolvedBy "priority")
		
		(?c c4a:affectsConf ?conf_1)
		(?c c4a:affectsConf ?conf_2)
		notEqual(?conf_1, ?conf_2)
		
		// if both configurations are active
		(?conf_1 c4a:isActive "true")
		(?conf_2 c4a:isActive "true")

		(?conf_1 c4a:refersToSol ?sol_1)
		(?conf_2 c4a:refersToSol ?sol_2)
		
		(?sol_1 c4a:layer ?layer_1)
		(?sol_2 c4a:layer ?layer_2)
	
		// and there exists a layer ranking than activate the solution with the highest ranked layer
		(?layer_ranking rdf:type c4a:LayerRanking)
		(?layer_ranking ?layer_1 ?r_1)
		(?layer_ranking ?layer_2 ?r_2)
		greaterThan(?r_1, ?r_2)
		->
		drop(6)
		(?conf_2 c4a:isActive "false")
		print('**** ResMSCConsiderSolLayer *****')
	]

	// The rule resolves a MUTIPLE SOLUTION CONFLICT (MSC) based on defined layer (semanticSolutions.jsonld).
	[ResMSCConsiderSolContext:
		(?c rdf:type c4a:MultipleSolutionConflict)
		noValue(?c c4a:isResolvedBy "priority")
		
		(?c c4a:affectsConf ?conf_1)
		(?c c4a:affectsConf ?conf_2)
		notEqual(?conf_1, ?conf_2)
		
		// if both configurations are active
		(?conf_1 c4a:isActive "true")
		(?conf_2 c4a:isActive "true")

		(?conf_1 c4a:refersToSol ?sol_1)
		(?conf_2 c4a:refersToSol ?sol_2)
		
		(?sol_1 c4a:context ?context_1)
		(?sol_2 c4a:context ?context_2)
	
		// and there exists a layer ranking than activate the solution with the highest ranked layer
		(?context_ranking rdf:type c4a:ContextRanking)
		(?context_ranking ?context_1 ?r_1)
		(?context_ranking ?context_2 ?r_2)
		greaterThan(?r_1, ?r_2)
		->
		drop(6)
		(?conf_2 c4a:isActive "false")
		print('**** ResMSCConsiderSolContext *****')
	]


